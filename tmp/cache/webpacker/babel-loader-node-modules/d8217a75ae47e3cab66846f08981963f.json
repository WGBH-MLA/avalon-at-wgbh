{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.PureWaveform = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactBootstrap = require(\"react-bootstrap\");\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _hls = _interopRequireDefault(require(\"hls.js\"));\n\nvar _AlertContainer = _interopRequireDefault(require(\"../containers/AlertContainer\"));\n\nvar _alertStatus = require(\"../services/alert-status\");\n\nvar _forms = require(\"../actions/forms\"); // Content of aria-label for UI components\n\n\nvar waveformLabel = \"Two interactive waveforms, plotted one after the other using data from a masterfile in the back-end server.\\nThere are time-based visual sections plotted in these 2 waveforms representing each timespan in the structure below. \\nFirst one contains a selected zoomed-in section from the entire waveform, while the second waveform shows an overview of the entire audio file.\\nThere are multiple zoom levels, which can be changed using the zoom-in and zoom-out buttons in the waveform toolbar. \\nThese time-based visual sections will be updated by editing the matching timespans in the structure.\";\nvar audioControlsLabel = \"Audio controls; play, seek, and adjust volume of the audio file\";\n\nvar Waveform =\n/*#__PURE__*/\nfunction (_Component) {\n  (0, _inherits2[\"default\"])(Waveform, _Component);\n\n  function Waveform(props) {\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, Waveform);\n    _this = (0, _possibleConstructorReturn2[\"default\"])(this, (0, _getPrototypeOf2[\"default\"])(Waveform).call(this, props));\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"componentDidMount\", function () {\n      var audioFile = _this.state.audioFile;\n\n      if (_hls[\"default\"].isSupported()) {\n        var hls = new _hls[\"default\"]();\n        var self = (0, _assertThisInitialized2[\"default\"])(_this); // Bind media player\n\n        hls.attachMedia(_this.mediaPlayer.current); // MEDIA_ATTACHED event is fired by hls object once MediaSource is ready\n\n        hls.on(_hls[\"default\"].Events.MEDIA_ATTACHED, function () {\n          hls.loadSource(audioFile);\n        });\n        hls.on(_hls[\"default\"].Events.ERROR, function (event, data) {\n          if (data.fatal) {\n            switch (data.type) {\n              case _hls[\"default\"].ErrorTypes.NETWORK_ERROR:\n                self.setAlert(data);\n                break;\n\n              case _hls[\"default\"].ErrorTypes.MEDIA_ERROR:\n                self.setAlert(data);\n                break;\n\n              default:\n                break;\n            }\n          }\n        });\n      } // Grab the React `refs` now the component is mounted\n\n\n      _this.props.waveformRef(_this.waveformContainer.current);\n\n      _this.props.mediaPlayerRef(_this.mediaPlayer.current);\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"clearAlert\", function () {\n      _this.setState({\n        alertObj: null\n      });\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"setAlert\", function (data) {\n      _this.props.retrieveStreamMediaError();\n\n      if (data.response !== undefined) {\n        var status = data.response.code;\n        status === 0 ? _this.setState({\n          alertObj: (0, _alertStatus.configureAlert)(-5, _this.clearAlert),\n          hasError: true\n        }) : _this.setState({\n          alertObj: (0, _alertStatus.configureAlert)(data.response.code, _this.clearAlert),\n          hasError: true\n        });\n      } else {\n        _this.setState({\n          alertObj: (0, _alertStatus.configureAlert)(-5, _this.clearAlert),\n          hasError: true\n        });\n      }\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"zoomIn\", function () {\n      _this.props.peaksInstance.peaks.zoom.zoomIn();\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"zoomOut\", function () {\n      _this.props.peaksInstance.peaks.zoom.zoomOut();\n    });\n    _this.state = {\n      audioFile: _this.props.audioStreamURL,\n      alertObj: null,\n      hasError: false\n    }; // Create `refs`\n\n    _this.waveformContainer = _react[\"default\"].createRef();\n    _this.mediaPlayer = _react[\"default\"].createRef();\n    return _this;\n  }\n\n  (0, _createClass2[\"default\"])(Waveform, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          alertObj = _this$state.alertObj,\n          hasError = _this$state.hasError;\n      return _react[\"default\"].createElement(\"div\", null, _react[\"default\"].createElement(\"div\", {\n        id: \"waveform-container\",\n        ref: this.waveformContainer,\n        \"aria-label\": waveformLabel,\n        tabIndex: \"0\"\n      }), _react[\"default\"].createElement(_reactBootstrap.Row, null, _react[\"default\"].createElement(_reactBootstrap.Col, {\n        xs: 12,\n        md: 6\n      }, hasError ? _react[\"default\"].createElement(_AlertContainer[\"default\"], alertObj) : _react[\"default\"].createElement(\"audio\", {\n        controls: true,\n        ref: this.mediaPlayer,\n        \"aria-label\": audioControlsLabel\n      }, \"Your browser does not support the audio element.\")), _react[\"default\"].createElement(_reactBootstrap.Col, {\n        xs: 12,\n        md: 6,\n        className: \"text-right\"\n      }, _react[\"default\"].createElement(_reactBootstrap.Form, {\n        inline: true,\n        onSubmit: this.handleSubmit,\n        role: \"form\"\n      }, _react[\"default\"].createElement(_reactBootstrap.FormGroup, null, _react[\"default\"].createElement(_reactBootstrap.ButtonToolbar, null, _react[\"default\"].createElement(_reactBootstrap.Button, {\n        className: \"glyphicon glyphicon-zoom-in\",\n        \"aria-label\": \"Zoom in\",\n        onClick: this.zoomIn\n      }), _react[\"default\"].createElement(_reactBootstrap.Button, {\n        className: \"glyphicon glyphicon-zoom-out\",\n        \"aria-label\": \"Zoom out\",\n        onClick: this.zoomOut\n      })))))));\n    }\n  }]);\n  return Waveform;\n}(_react.Component); // To use in tests as a disconnected component (to access state)\n\n\nexports.PureWaveform = Waveform;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    peaksInstance: state.peaksInstance\n  };\n};\n\nvar mapDispatchToProps = {\n  retrieveStreamMediaError: _forms.retrieveStreamMediaError\n}; // To use in the app\n\nvar _default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(Waveform);\n\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"module"}