{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactBootstrap = require(\"react-bootstrap\");\n\nvar _formHelper = require(\"../services/form-helper\");\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _lodash = require(\"lodash\");\n\nvar _ListItemInlineEditControls = _interopRequireDefault(require(\"./ListItemInlineEditControls\"));\n\nvar styles = {\n  formControl: {\n    margin: '0 5px',\n    width: '300px'\n  }\n};\n\nvar HeadingInlineForm =\n/*#__PURE__*/\nfunction (_Component) {\n  (0, _inherits2[\"default\"])(HeadingInlineForm, _Component);\n\n  function HeadingInlineForm(props) {\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, HeadingInlineForm);\n    _this = (0, _possibleConstructorReturn2[\"default\"])(this, (0, _getPrototypeOf2[\"default\"])(HeadingInlineForm).call(this, props)); // To implement validation logic on begin and end times, we need to remove the current item\n    // from the stored data\n\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"state\", {\n      headingTitle: ''\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"handleCancelClick\", function () {\n      _this.props.cancelFn();\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"handleInputChange\", function (e) {\n      _this.setState((0, _defineProperty2[\"default\"])({}, e.target.id, e.target.value));\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"handleSaveClick\", function () {\n      var headingTitle = _this.state.headingTitle;\n\n      _this.props.saveFn(_this.props.item.id, {\n        headingTitle: headingTitle\n      });\n    });\n    _this.tempSmData = undefined;\n    return _this;\n  }\n\n  (0, _createClass2[\"default\"])(HeadingInlineForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var smData = this.props.smData; // Get a fresh copy of store data\n\n      this.tempSmData = (0, _lodash.cloneDeep)(smData); // Load existing form values\n\n      this.setState((0, _formHelper.getExistingFormValues)(this.props.item.id, this.tempSmData));\n    }\n  }, {\n    key: \"formIsValid\",\n    value: function formIsValid() {\n      return (0, _formHelper.isTitleValid)(this.state.headingTitle);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var headingTitle = this.state.headingTitle;\n      return _react[\"default\"].createElement(_reactBootstrap.Form, {\n        inline: true\n      }, _react[\"default\"].createElement(\"div\", {\n        className: \"row-wrapper\"\n      }, _react[\"default\"].createElement(\"div\", null, _react[\"default\"].createElement(_reactBootstrap.FormGroup, {\n        controlId: \"headingTitle\",\n        validationState: (0, _formHelper.getValidationTitleState)(headingTitle)\n      }, _react[\"default\"].createElement(_reactBootstrap.ControlLabel, null, \"Title\"), _react[\"default\"].createElement(_reactBootstrap.FormControl, {\n        type: \"text\",\n        style: styles.formControl,\n        value: headingTitle,\n        onChange: this.handleInputChange\n      }))), _react[\"default\"].createElement(_ListItemInlineEditControls[\"default\"], {\n        formIsValid: this.formIsValid(),\n        handleSaveClick: this.handleSaveClick,\n        handleCancelClick: this.handleCancelClick\n      })));\n    }\n  }]);\n  return HeadingInlineForm;\n}(_react.Component);\n\n(0, _defineProperty2[\"default\"])(HeadingInlineForm, \"propTypes\", {\n  item: _propTypes[\"default\"].object,\n  cancelFn: _propTypes[\"default\"].func,\n  saveFn: _propTypes[\"default\"].func\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    smData: state.smData\n  };\n};\n\nvar _default = (0, _reactRedux.connect)(mapStateToProps)(HeadingInlineForm);\n\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"module"}