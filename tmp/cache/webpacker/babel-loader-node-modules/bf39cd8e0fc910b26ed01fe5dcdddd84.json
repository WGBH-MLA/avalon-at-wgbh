{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.PureTimespanInlineForm = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactBootstrap = require(\"react-bootstrap\");\n\nvar _formHelper = require(\"../services/form-helper\");\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _StructuralMetadataUtils = _interopRequireDefault(require(\"../services/StructuralMetadataUtils\"));\n\nvar _lodash = require(\"lodash\");\n\nvar _ListItemInlineEditControls = _interopRequireDefault(require(\"./ListItemInlineEditControls\"));\n\nvar peaksActions = _interopRequireWildcard(require(\"../actions/peaks-instance\"));\n\nvar _WaveformDataUtils = _interopRequireDefault(require(\"../services/WaveformDataUtils\"));\n\nvar structuralMetadataUtils = new _StructuralMetadataUtils[\"default\"]();\nvar waveformUtils = new _WaveformDataUtils[\"default\"]();\nvar styles = {\n  formControl: {\n    margin: '0 5px'\n  }\n};\n\nvar TimespanInlineForm =\n/*#__PURE__*/\nfunction (_Component) {\n  (0, _inherits2[\"default\"])(TimespanInlineForm, _Component);\n\n  function TimespanInlineForm(props) {\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, TimespanInlineForm);\n    _this = (0, _possibleConstructorReturn2[\"default\"])(this, (0, _getPrototypeOf2[\"default\"])(TimespanInlineForm).call(this, props)); // To implement validation logic on begin and end times, we need to remove the current item\n    // from the stored data\n\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"state\", {\n      beginTime: '',\n      endTime: '',\n      timespanTitle: '',\n      clonedSegment: {},\n      peaksInstance: _this.props.peaksInstance,\n      segment: _this.props.segment\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"handleCancelClick\", function () {\n      // Revert to segment to the state before\n      _this.props.revertSegment(_this.state.clonedSegment);\n\n      _this.props.cancelFn();\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"handleInputChange\", function (e) {\n      // Lock disabling isTyping flag before updating DOM from form inputs\n      _this.props.changeEditSegment(_this.props.segment, 0); // Enable updating state from form inputs\n\n\n      _this.props.setIsTyping(1);\n\n      _this.setState((0, _defineProperty2[\"default\"])({}, e.target.id, e.target.value), function () {\n        // Update waveform segment with user inputs in the form\n        _this.props.updateSegment(_this.props.segment, _this.state);\n      });\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"handleSaveClick\", function () {\n      _this.props.saveSegment(_this.state);\n\n      var _this$state = _this.state,\n          beginTime = _this$state.beginTime,\n          endTime = _this$state.endTime,\n          timespanTitle = _this$state.timespanTitle;\n\n      _this.props.saveFn(_this.props.segment.id, {\n        beginTime: beginTime,\n        endTime: endTime,\n        timespanTitle: timespanTitle\n      });\n    });\n    _this.tempSmData = undefined;\n    _this.allSpans = [];\n    return _this;\n  }\n\n  (0, _createClass2[\"default\"])(TimespanInlineForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props = this.props,\n          smData = _this$props.smData,\n          item = _this$props.item,\n          peaksInstance = _this$props.peaksInstance;\n      var segment = waveformUtils.convertTimespanToSegment(item); // Get a fresh copy of store data\n\n      this.tempSmData = (0, _lodash.cloneDeep)(smData); // Load existing form values\n\n      this.setState((0, _formHelper.getExistingFormValues)(item.id, this.tempSmData, peaksInstance.peaks)); // Remove current list item from the data we're doing validation against in this form\n\n      this.tempSmData = structuralMetadataUtils.deleteListItem(item.id, this.tempSmData); // Save a reference to all the spans for future calculations\n\n      this.allSpans = structuralMetadataUtils.getItemsOfType('span', this.tempSmData); // Make segment related to timespan editable\n\n      this.props.activateSegment(item.id); // Set the selected segment in the component's state\n\n      this.setState({\n        segment: segment\n      }); // Initialize the segment in Redux store with the selected item\n\n      this.props.changeEditSegment(segment, 0);\n    }\n  }, {\n    key: \"formIsValid\",\n    value: function formIsValid() {\n      var _this$state2 = this.state,\n          beginTime = _this$state2.beginTime,\n          endTime = _this$state2.endTime;\n      var titleValid = (0, _formHelper.isTitleValid)(this.state.timespanTitle);\n      var timesValidResponse = (0, _formHelper.validTimespans)(beginTime, endTime, this.allSpans, this.props.peaksInstance.peaks);\n      return titleValid && timesValidResponse.valid;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state3 = this.state,\n          beginTime = _this$state3.beginTime,\n          endTime = _this$state3.endTime,\n          timespanTitle = _this$state3.timespanTitle;\n      return _react[\"default\"].createElement(_reactBootstrap.Form, {\n        inline: true\n      }, _react[\"default\"].createElement(\"div\", {\n        className: \"row-wrapper\"\n      }, _react[\"default\"].createElement(\"div\", null, _react[\"default\"].createElement(_reactBootstrap.FormGroup, {\n        controlId: \"timespanTitle\",\n        validationState: (0, _formHelper.getValidationTitleState)(timespanTitle)\n      }, _react[\"default\"].createElement(_reactBootstrap.ControlLabel, null, \"Title\"), _react[\"default\"].createElement(_reactBootstrap.FormControl, {\n        type: \"text\",\n        style: styles.formControl,\n        value: timespanTitle,\n        onChange: this.handleInputChange\n      })), _react[\"default\"].createElement(_reactBootstrap.FormGroup, {\n        controlId: \"beginTime\",\n        validationState: (0, _formHelper.getValidationBeginState)(beginTime, this.allSpans)\n      }, _react[\"default\"].createElement(_reactBootstrap.ControlLabel, null, \"Begin Time\"), _react[\"default\"].createElement(_reactBootstrap.FormControl, {\n        type: \"text\",\n        style: styles.formControl,\n        value: beginTime,\n        onChange: this.handleInputChange\n      })), _react[\"default\"].createElement(_reactBootstrap.FormGroup, {\n        controlId: \"endTime\",\n        validationState: (0, _formHelper.getValidationEndState)(beginTime, endTime, this.allSpans, this.props.peaksInstance.peaks)\n      }, _react[\"default\"].createElement(_reactBootstrap.ControlLabel, null, \"End Time\"), _react[\"default\"].createElement(_reactBootstrap.FormControl, {\n        type: \"text\",\n        style: styles.formControl,\n        value: endTime,\n        onChange: this.handleInputChange\n      }))), _react[\"default\"].createElement(_ListItemInlineEditControls[\"default\"], {\n        formIsValid: this.formIsValid(),\n        handleSaveClick: this.handleSaveClick,\n        handleCancelClick: this.handleCancelClick\n      })));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var peaksInstance = nextProps.peaksInstance,\n          segment = nextProps.segment,\n          isTyping = nextProps.isTyping,\n          isDragging = nextProps.isDragging,\n          isInitializing = nextProps.isInitializing;\n\n      if (!isDragging && isInitializing && !isTyping && !(0, _lodash.isEmpty)(segment)) {\n        var startTime = segment.startTime,\n            endTime = segment.endTime;\n        return {\n          beginTime: structuralMetadataUtils.toHHmmss(startTime),\n          endTime: structuralMetadataUtils.toHHmmss(endTime)\n        };\n      }\n\n      if (isDragging) {\n        // When handles in waveform are dragged clear out isInitializing and isTyping flags\n        isInitializing ? nextProps.setIsInitializing(0) : null;\n        isTyping ? nextProps.setIsTyping(0) : null;\n\n        if (prevState.peaksInstance !== peaksInstance) {\n          var _waveformUtils$valida = waveformUtils.validateSegment(segment, peaksInstance.peaks),\n              _startTime = _waveformUtils$valida.startTime,\n              _endTime = _waveformUtils$valida.endTime;\n\n          return {\n            beginTime: structuralMetadataUtils.toHHmmss(_startTime),\n            endTime: structuralMetadataUtils.toHHmmss(_endTime)\n          };\n        }\n      }\n\n      return null;\n    }\n  }]);\n  return TimespanInlineForm;\n}(_react.Component); // For testing purposes\n\n\nexports.PureTimespanInlineForm = TimespanInlineForm;\n(0, _defineProperty2[\"default\"])(TimespanInlineForm, \"propTypes\", {\n  item: _propTypes[\"default\"].object,\n  cancelFn: _propTypes[\"default\"].func,\n  saveFn: _propTypes[\"default\"].func\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    smData: state.smData,\n    peaksInstance: state.peaksInstance,\n    segment: state.peaksInstance.segment,\n    isDragging: state.peaksInstance.isDragging\n  };\n};\n\nvar mapDispatchToProps = {\n  activateSegment: peaksActions.activateSegment,\n  revertSegment: peaksActions.revertSegment,\n  saveSegment: peaksActions.saveSegment,\n  updateSegment: peaksActions.updateSegment,\n  changeEditSegment: peaksActions.dragSegment\n};\n\nvar _default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(TimespanInlineForm);\n\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"module"}