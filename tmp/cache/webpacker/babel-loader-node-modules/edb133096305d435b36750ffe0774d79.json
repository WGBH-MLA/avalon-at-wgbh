{"ast":null,"code":"var _jsxFileName = \"/home/app/avalon/app/javascript/components/ReactButtonContainer.jsx\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React, { Component } from 'react';\nimport { Modal, Button } from 'react-bootstrap';\nimport ReactSME from 'react-structural-metadata-editor';\nimport './ReactButtonContainer.css';\n\nvar ReactButtonContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ReactButtonContainer, _Component);\n\n  function ReactButtonContainer(props) {\n    var _this;\n\n    _classCallCheck(this, ReactButtonContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ReactButtonContainer).call(this, props));\n\n    _this.handleClose = function () {\n      if (confirm(\"Unsaved changes will be lost. Are you sure?\")) {\n        _this.setState({\n          show: false\n        });\n      }\n    };\n\n    _this.handleShow = function (e) {\n      e.preventDefault();\n\n      _this.setState({\n        show: true\n      });\n    };\n\n    _this.state = {\n      show: false,\n      smeProps: {\n        masterFileID: _this.props.masterFileID,\n        baseURL: _this.props.baseURL,\n        initStructure: _this.props.initStructure,\n        audioStreamURL: _this.props.audioStreamURL,\n        streamDuration: _this.props.streamDuration\n      }\n    };\n    return _this;\n  }\n\n  _createClass(ReactButtonContainer, [{\n    key: \"render\",\n    value: function render() {\n      var modalID = \"edit_structure_\".concat(this.props.sectionIndex);\n      return React.createElement(\"div\", {\n        className: \"ReactButtonContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-primary btn-xs btn-edit\",\n        onClick: this.handleShow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"Edit Structure\"), React.createElement(Modal, {\n        id: modalID,\n        show: this.state.show,\n        animation: false,\n        onHide: this.handleClose,\n        backdrop: \"static\",\n        className: \"sme-modal-wrapper\",\n        dialogClassName: \"modal-wrapper-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(Modal.Header, {\n        closeButton: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(Modal.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Edit Structure\")), React.createElement(Modal.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(ReactSME, Object.assign({}, this.state.smeProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return ReactButtonContainer;\n}(Component);\n\nexport default ReactButtonContainer;","map":{"version":3,"sources":["/home/app/avalon/app/javascript/components/ReactButtonContainer.jsx"],"names":["React","Component","Modal","Button","ReactSME","ReactButtonContainer","props","handleClose","confirm","setState","show","handleShow","e","preventDefault","state","smeProps","masterFileID","baseURL","initStructure","audioStreamURL","streamDuration","modalID","sectionIndex"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,iBAA9B;AACA,OAAOC,QAAP,MAAqB,kCAArB;AACA,OAAO,4BAAP;;IAEMC,oB;;;;;AACJ,gCAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8FAAMA,KAAN;;AADiB,UAenBC,WAfmB,GAeL,YAAM;AAClB,UAAIC,OAAO,CAAC,6CAAD,CAAX,EAA4D;AAC1D,cAAKC,QAAL,CAAc;AACZC,UAAAA,IAAI,EAAE;AADM,SAAd;AAGD;AACF,KArBkB;;AAAA,UAuBnBC,UAvBmB,GAuBN,UAAAC,CAAC,EAAI;AAChBA,MAAAA,CAAC,CAACC,cAAF;;AACA,YAAKJ,QAAL,CAAc;AACZC,QAAAA,IAAI,EAAE;AADM,OAAd;AAGD,KA5BkB;;AAGjB,UAAKI,KAAL,GAAa;AACXJ,MAAAA,IAAI,EAAE,KADK;AAEXK,MAAAA,QAAQ,EAAE;AACRC,QAAAA,YAAY,EAAE,MAAKV,KAAL,CAAWU,YADjB;AAERC,QAAAA,OAAO,EAAE,MAAKX,KAAL,CAAWW,OAFZ;AAGRC,QAAAA,aAAa,EAAE,MAAKZ,KAAL,CAAWY,aAHlB;AAIRC,QAAAA,cAAc,EAAE,MAAKb,KAAL,CAAWa,cAJnB;AAKRC,QAAAA,cAAc,EAAE,MAAKd,KAAL,CAAWc;AALnB;AAFC,KAAb;AAHiB;AAalB;;;;6BAiBQ;AACP,UAAMC,OAAO,4BAAqB,KAAKf,KAAL,CAAWgB,YAAhC,CAAb;AACA,aACE;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,SAAS,EAAC,iCADZ;AAEE,QAAA,OAAO,EAAE,KAAKX,UAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAQE,oBAAC,KAAD;AAAO,QAAA,EAAE,EAAEU,OAAX;AAAoB,QAAA,IAAI,EAAE,KAAKP,KAAL,CAAWJ,IAArC;AAA2C,QAAA,SAAS,EAAE,KAAtD;AAA6D,QAAA,MAAM,EAAE,KAAKH,WAA1E;AAAuF,QAAA,QAAQ,EAAC,QAAhG;AAAyG,QAAA,SAAS,EAAC,mBAAnH;AAAuI,QAAA,eAAe,EAAC,oBAAvJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD,CAAO,MAAP;AAAc,QAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,CADF,EAIE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD,oBAAc,KAAKO,KAAL,CAAWC,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,CAJF,CARF,CADF;AAmBD;;;;EApDgCd,S;;AAuDnC,eAAeI,oBAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Modal, Button } from 'react-bootstrap';\nimport ReactSME from 'react-structural-metadata-editor';\nimport './ReactButtonContainer.css';\n\nclass ReactButtonContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      show: false,\n      smeProps: {\n        masterFileID: this.props.masterFileID,\n        baseURL: this.props.baseURL,\n        initStructure: this.props.initStructure,\n        audioStreamURL: this.props.audioStreamURL,\n        streamDuration: this.props.streamDuration\n      }\n    };\n  }\n\n  handleClose = () => {\n    if (confirm(\"Unsaved changes will be lost. Are you sure?\")) {\n      this.setState({\n        show: false\n      });\n    }\n  };\n\n  handleShow = e => {\n    e.preventDefault();\n    this.setState({\n      show: true\n    });\n  };\n\n  render() {\n    const modalID = `edit_structure_${this.props.sectionIndex}`;\n    return (\n      <div className=\"ReactButtonContainer\">\n        <button\n          className=\"btn btn-primary btn-xs btn-edit\"\n          onClick={this.handleShow}\n        >\n          Edit Structure\n        </button>\n\n        <Modal id={modalID} show={this.state.show} animation={false} onHide={this.handleClose} backdrop=\"static\" className=\"sme-modal-wrapper\" dialogClassName=\"modal-wrapper-body\">\n          <Modal.Header closeButton>\n            <Modal.Title>Edit Structure</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <ReactSME {...this.state.smeProps} />\n          </Modal.Body>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default ReactButtonContainer;\n"]},"metadata":{},"sourceType":"module"}