I";(function() {
  this.initialize_typeahead = function($t) {
    var $validate, mySource;
    $validate = $t.data('validate') || false;
    $t.attr('autocomplete', 'off');
    mySource = new Bloodhound({
      datumTokenizer: Bloodhound.tokenizers.whitespace('display'),
      queryTokenizer: Bloodhound.tokenizers.whitespace,
      remote: {
        url: ($('body').data('mountpoint')) + "autocomplete?q=%QUERY&t=" + ($t.data('model')),
        wildcard: '%QUERY'
      }
    });
    mySource.initialize();
    return $t.typeahead({
      minLength: 2,
      highlight: true
    }, {
      display: function(suggestion) {
        if (suggestion.display === "") {
          return suggestion.id;
        } else {
          return suggestion.display;
        }
      },
      source: mySource,
      limit: 10
    }).on("typeahead:selected typeahead:autocompleted", function(event, suggestion, dataset) {
      var target;
      target = $("#" + ($t.data('target')));
      target.val(suggestion["id"]);
      $t.data('matched_val', suggestion["display"]);
    }).on("keypress", function(e) {
      if (e.which === 13) {
        e.preventDefault;
        return false;
      }
    }).blur(function() {
      var target, typed;
      target = $("#" + ($t.data('target')));
      typed = $(this).val();
      if (typed === "") {
        return target.val("");
      } else if ($t.data('matched_val') !== typed) {
        mySource.remote.get(typed, function(matches) {
          if (!$validate) {
            return target.val(typed);
          } else if (matches.length > 0) {
            return target.val(matches[0].id);
          } else {
            target.val("");
            return $(this).val("");
          }
        });
      }
    });
  };

  $('.typeahead.from-model').each(function() {
    initialize_typeahead($(this));
  });

}).call(this);
:ET