I"Š(function() {
  $(function() {
    return $('.directupload').find("input:file").each(function(i, elem) {
      var bar_container, file_input, form, progress_bar, submit_button;
      file_input = $(elem);
      form = $(file_input.parents('form:first'));
      submit_button = form.find('input[type="submit"], *[data-trigger="submit"]');
      submit_button.on('click', function() {
        $('.directupload input:file').fileupload('send', {
          files: $('.directupload input:file').prop('files')
        });
        return false;
      });
      progress_bar = $("<div class='bar'></div>");
      bar_container = $("<div class='progress'></div>").append(progress_bar);
      $('div.fileinput').after(bar_container);
      return file_input.fileupload({
        fileInput: file_input,
        url: form.data('url'),
        type: 'POST',
        autoUpload: false,
        formData: form.data('form-data'),
        paramName: 'file',
        dataType: 'XML',
        replaceFileInput: false,
        progressall: function(e, data) {
          var progress;
          progress = parseInt(data.loaded / data.total * 100, 10);
          return progress_bar.css('width', progress + "%");
        },
        start: function(e) {
          submit_button.prop('disabled', true);
          return progress_bar.css('background', 'green').css('display', 'block').css('width', '0%').text("Loading...");
        },
        done: function(e, data) {
          var bucket, input, key, url;
          submit_button.prop('disabled', false);
          progress_bar.text("Uploading done");
          key = $(data.jqXHR.responseXML).find("Key").text();
          bucket = $(data.jqXHR.responseXML).find("Bucket").text();
          url = "s3://" + bucket + "/" + key;
          input = $("<input />", {
            type: 'hidden',
            name: 'selected_files[0][url]',
            value: url
          });
          file_input.replaceWith(input);
          return form.submit();
        },
        fail: function(e, data) {
          submit_button.prop('disabled', false);
          return progress_bar.css("background", "red").text("Failed");
        }
      });
    });
  });

}).call(this);
:ET